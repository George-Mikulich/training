pipeline {
    agent any
    options {
        skipStagesAfterUnstable()
    }
    stages {
         stage('Clone repository') {
            steps {
                script{
                checkout scm
                }
            }
        }

	stage('Pylint') {
	    steps {
		sh 'python3 -m pylint --output-format=parseable --fail-under=<threshold value> module --msg-template="{path}:{line}: [{msg_id}({symbol}), {obj}] {msg}" | tee pylint.log || echo "pylint exited with $?"'
		echo "linting Success, Generating Report"
		recordIssues enabledForFailure: true, aggregatingResults: true, tool: pyLint(pattern: 'pylint.log')
	    }
	}

        stage('Build') {
            steps {
                script{
                 app = docker.build('quay.io/george-mikulich/flask-app')
                }
            }
        }

        stage('Deploy') {
            steps {
                script{
                        docker.withRegistry('https://quay.io','4b2b06c7-5ea6-4ef4-b1fc-6ff48c45c9c3') {
                    app.push("${env.GIT_COMMIT}")
                    }
                }
            }
        }
    }
}
